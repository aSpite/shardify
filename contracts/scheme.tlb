// NFT Holder
_ jetton_master_address:MsgAddressInt nft_address:MsgAddressInt own_nft:Bool
  last_taker_address:MsgAddressInt jetton_wallet_code:^Cell = NftHolderStorage;

return_nft#1a3fdbcf query_id:uint64 jetton_amount:Coins nft_address:MsgAddressInt
  wallet_owner_address:MsgAddressInt = InternalMsgBody; // 9a3fdbcf & 0x7fffffff = 0x1a3fdbcf
repeat_return#6855e245 query_id:uint64 owner_address:MsgAddressInt =
  InternalMsgBody; // 0x6855e245 & 0x7fffffff = 6855e245
return_fail#bd017ec7 query_id:uint64 nft_address:MsgAddressInt =
  InternalMsgBody; // 0x3d017ec7 | 0x80000000 = 0xbd017ec7

// Jetton Minter
frac_data$_ parts_count:Coins nft_holder_dara:^Cell public_key:uint256 collection_address:MsgAddressInt
  creator_address:MsgAddressInt = FracData;
_ balance:Coins owner_address:MsgAddressInt content:^Cell
  jetton_wallet_code:^Cell frac_data:^FracData = JettonMinterStorage;

forward_payload$_ signature:bits512 ^[ valid_until:uint32 nft_item_index:uint64 nft_item_code:^Cell
  frac_price:Coins pool_fee_numerator:uint8 creator_fee_numerator:uint8 ] = ForwardPayload

// Jetton Wallet
_ balance:Coins owner_address:MsgAddressInt jetton_master_address:MsgAddressInt
  jetton_wallet_code:^Cell parts_count:Coins nft_holder_code:^Cell = JettonWalletStorage;

defrac_nft#3a0f1e4c query_id:uint64 nft_address:MsgAddressInt = InternalMsgBody; // ba0f1e4c & 0x7fffffff = 3a0f1e4c